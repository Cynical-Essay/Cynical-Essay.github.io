<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Github on 現代犬儒派的軟工筆記</title>
    <link>https://Cynical-Essay.github.io/tags/github/</link>
    <description>Recent content in Github on 現代犬儒派的軟工筆記</description>
    <image>
      <url>https://Cynical-Essay.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://Cynical-Essay.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 20 Sep 2022 16:04:52 +0800</lastBuildDate><atom:link href="https://Cynical-Essay.github.io/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>部落格架設筆記(2) - 以 Github Issues 作為部落格的留言功能</title>
      <link>https://Cynical-Essay.github.io/blog/blog-2/</link>
      <pubDate>Tue, 20 Sep 2022 16:04:52 +0800</pubDate>
      
      <guid>https://Cynical-Essay.github.io/blog/blog-2/</guid>
      <description>前言 部落格雛形建立並 Host 在平台後，接下來要慢慢將各種 細節 / 機制 建立起來。而其中一項就是留言功能了。畢竟文章寫都寫了，哪怕是看到一兩個讀者的回饋，對寂寞的部落格作者而言都會起到激勵的作用。
本文紀錄透過 Utterances 整合 Github Issues 至 Hugo 的過程，提供一個讓讀者能夠針對我們的文章回饋想法的功能。
始於簡介 Comments Service With Hugo Comments Service，留言服務，提供使用者對網站 or 網路社群留言的功能。 使用者可以使用如 Disqus / Facebook Comments 等服務提供商提供的現有服務，也可以透過 Isso 等留言服務開源專案自行 Host。自行 Host 的特性是資訊不會存在第三方的服務內，可控性較高， 缺點則是需要付出 架設 / 維運 的成本，使用現有服務則反之，如何選擇就依據各自使用的情境來評估了。
Hugo 預設支援 Disqus 留言服務，整合上也不困難。另外官網上的介紹也條列了許多替代方案。
Github Issues 大多數的軟工人員應該都不陌生，就是 Github 上提供針對專案 需求 / 異常 / 問題 的 Tracking 機制，支援 Markdown 語法。
Utterances 以 Typescript 撰寫的開源留言服務工具。透過整合 Github Issues API 與 Github OAUTH，達到讓使用者可以針對如部落格或 WIKI 內容留言的功能。其留言的內容會被以 Issue 的形式存放在 Github 內。</description>
    </item>
    
    <item>
      <title>部落格架設筆記(1) - Hello Hugo</title>
      <link>https://Cynical-Essay.github.io/blog/blog-1/</link>
      <pubDate>Wed, 14 Sep 2022 13:04:52 +0800</pubDate>
      
      <guid>https://Cynical-Essay.github.io/blog/blog-1/</guid>
      <description>前言 透過部落格學習新技術與紀錄生活，一直是個不錯的選擇。
近期無意中發現除了過往使用如 Blogger / Medium / WP 等部落格平台服務外，也可以選擇透過 靜態網站生成框架 來撰寫部落格。
好奇心加上以往的部落格往往寫不到幾篇就放著長草，想要一雪前恥。於是有點遞迴的，這個部落格的誕生，就從一篇如何透過 靜態網站生成框架 架設本部落格的文章作為起點。
Hugo 簡介 根據官網所述，Hugo 是一個靜態網站生成器 (Static Site Generator)。
直白點說，就是配合其規則，把想要的內容，用指定的語法撰寫後，放到指定的檔案路徑下，透過 CLI 指令即可產生靜態網站的產出物，至於如路由之類的底層操作則交由框架來負責，使用者就不用費心了。
這類生成器種類其實挺不少的，無論是以 Node.js 開發的 Hexo ，或是以 Gloang 開發的 Hugo 等，生態圈都相當完整，也都有一定的使用者。
之所以會選擇 Hugo，單純是基於一個架設部落格的新手而言，與其花大量時間在研究這些差不多優秀的框架的細節，不如就擇一開始研究與實作，何況身為一個軟體工程師，應該可能八成大概也沒有什麼事情是解決不了的吧。
樂觀主義是民族的鴉片
-米蘭．昆德拉
始於本機 環境安裝 MacOS 作業系統的使用者，配合 Homebrew 套件管理工具，安裝上就跟多數套件的安裝大同小異。
brew install hugo 一行，打完收工。
然後也跟大多數套件的安裝一樣，來確認一下版本號。
hugo version 就這樣，清楚明白，簡單粗暴，讚。
建立專案 接著建立 Hugo 專案。
Hugo 的 Config 檔預設為 Toml 格式，另外也支援 Yaml/Json 格式，建立專案時可透過 -f 來指定格式。
hugo new site blog-hugo-cynical-essay -f yaml 可以看一下到底長了什麼出來</description>
    </item>
    
  </channel>
</rss>
